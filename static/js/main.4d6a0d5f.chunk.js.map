{"version":3,"sources":["store/actions/actionTypes.js","reportWebVitals.js","store/reducers/auth.js","store/reducers/servers.js","routes/index.js","App.js","index.js","components/UI/spinner/spinner.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","FETCH_SERVERS_START","FETCH_SERVERS_FAIL","FETCH_SERVERS_SUCCESS","SORT_SERVERS_BY_NAME","SORT_SERVERS_BY_DISTANCE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","token","error","loading","authStart","state","action","authSucess","authFail","logOut","reducer","type","actionTypes","servers","fetchServersStart","fetchServersSuccess","fetchServersFail","sortServersByName","newState","Object","assign","updatedArray","sort","firstKey","secondKey","name","toLowerCase","slice","sortServersByDistance","distance","Auth","React","lazy","Servers","Hero","Switches","path","component","fallback","exact","render","App","className","composeEnhancers","compose","rootReducer","combineReducers","auth","authReducer","serversReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","spinner"],"mappings":"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","file":"static/js/main.4d6a0d5f.chunk.js","sourcesContent":["export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\nexport const FETCH_SERVERS_START = \"FETCH_SERVERS_START\";\nexport const FETCH_SERVERS_FAIL = \"FETCH_SERVERS_FAIL\";\nexport const FETCH_SERVERS_SUCCESS = \"FETCH_SERVERS_SUCCESS\";\nexport const SORT_SERVERS_BY_NAME = \"SORT_SERVERS_BY_NAME\";\nexport const SORT_SERVERS_BY_DISTANCE = \"SORT_SERVERS_BY_DISTANCE\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false,\n};\n\nconst authStart = (state, action) => {\n  return {\n    ...initialState,\n    error: null,\n    loading: true,\n  };\n};\n\nconst authSucess = (state, action) => {\n  return {\n    ...initialState,\n    token: action.token,\n    error: null,\n    loading: false,\n  };\n};\n\nconst authFail = (state, action) => {\n  return {\n    ...initialState,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst logOut = (state, action) => {\n  return {\n    ...initialState,\n    token: null,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSucess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return logOut(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  servers: [],\n  loading: false,\n};\n\nconst fetchServersStart = (state, action) => {\n  return {\n    ...initialState,\n    loading: true,\n  };\n};\n\nconst fetchServersSuccess = (state, action) => {\n  return {\n    ...initialState,\n    servers: action.servers,\n    loading: false,\n  };\n};\n\nconst fetchServersFail = (state, action) => {\n  return {\n    ...initialState,\n    loading: false,\n  };\n};\n\nconst sortServersByName = (state, action) => {\n  const newState = Object.assign({}, state);\n  let updatedArray = state.servers;\n  updatedArray.sort((firstKey, secondKey) => {\n    if (firstKey.name.toLowerCase() < secondKey.name.toLowerCase()) return -1;\n    if (firstKey.name.toLowerCase() > secondKey.name.toLowerCase()) return 1;\n    return 0;\n  });\n\n  newState.servers = updatedArray.slice(0);\n\n  return newState;\n};\n\nconst sortServersByDistance = (state, action) => {\n  const newState = Object.assign({}, state);\n  let updatedArray = state.servers;\n  updatedArray.sort((firstKey, secondKey) => {\n    return firstKey.distance - secondKey.distance;\n  });\n\n  newState.servers = updatedArray.slice(0);\n  return newState;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_SERVERS_START:\n      return fetchServersStart(state, action);\n    case actionTypes.FETCH_SERVERS_SUCCESS:\n      return fetchServersSuccess(state, action);\n    case actionTypes.FETCH_SERVERS_FAIL:\n      return fetchServersFail(state, action);\n    case actionTypes.SORT_SERVERS_BY_NAME:\n      return sortServersByName(state, action);\n    case actionTypes.SORT_SERVERS_BY_DISTANCE:\n      return sortServersByDistance(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Spinner from \"../components/UI/spinner/spinner\";\n\nconst Auth = React.lazy(() => import(\"../containers/auth/auth\"));\nconst Servers = React.lazy(() => import(\"../containers/servers/servers\"));\nconst Hero = React.lazy(() => import(\"../containers/hero/hero\"));\n\nconst Switches = () => {\n  return (\n    <Switch>\n      <Route\n        path=\"/\"\n        component={() => (\n          <Suspense fallback={<Spinner />}>\n            <Hero />\n          </Suspense>\n        )}\n        exact\n      />\n      <Route\n        path=\"/auth\"\n        component={() => (\n          <Suspense fallback={<Spinner />}>\n            <Auth />\n          </Suspense>\n        )}\n      />\n      <Route\n        path=\"/servers\"\n        component={() => (\n          <Suspense fallback={<Spinner />}>\n            <Servers />\n          </Suspense>\n        )}\n      />\n      {/* <Redirect to=\"/\" /> */}\n      <Route render={() => <h1>Page not found</h1>} />\n    </Switch>\n  );\n};\nexport default Switches;\n","import Switches from \"./routes\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Switches />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport authReducer from \"./store/reducers/auth\";\nimport serversReducer from \"./store/reducers/servers\";\n\nimport \"./index.css\";\nimport \"./App.scss\";\n\nimport App from \"./App\";\n\nconst composeEnhancers = compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  servers: serversReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nreportWebVitals();\n","import React from \"react\";\n\nimport \"./spinner.scss\";\n\nconst spinner = () => (\n  <div className=\"Spinner\">\n    <div className=\"lds-roller\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\nexport default spinner;\n"],"sourceRoot":""}